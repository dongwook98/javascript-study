/**
 * prototype
 * 한국어로는 원형(원래형태), 유전자라고 생각하면 좋음.
 * 생성자: 기본적으로 함수이고, new 키워드를 통해서 그 함수는 단순한 함수가 아니라
 * 생성자 함수라는 것을 알려준다. 그렇게 해서 실행된 결과는 생성자를 통해서 만들어진 객체를 리턴한다.
 *
 * prototype은 클래스, 객체의 내용 복사 없이도 상속을 구현할 수 있게 해주는 방법이다.
 * prototype의 하는일 연결
 *
 *
 * 자바스크립트는 복사해서 상속이 불가능하다.
 * why? 깊은복사를 하지못하기때문에
 *
 *
 * 클래스의 상속과 프로토타입의 상속과 엄연히 다르다.
 * 자바스크립트는 클래스라는 것이 없다..
 * 자바스크립트에서 '복사'를 통한 상속은 없다.
 * prototype은 클래스,객체의 내용 복사 없이도 상속을 구현할 수 있게 해주는 방법이다.
 * prototype은 '연결'이다.
 *
 *  * 자바스크립트는 클래스라는 것이 없다..
 *  함수를 이용해서 클래스기능을 흉내낼뿐
 *
 * 복사 없이 어떻게 상속을 수행할 수 있는 것인가?
 * 일반적인 Java의 클래스에서는 내용이 '복사'되어 객체에 전달
 * 하지만 JavaScript에서는 '깊은 복사'를 수행하지 않기때문에 상속을 복사하여 하지 않는다.
 *
 */
